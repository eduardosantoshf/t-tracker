name: Deliveries Engine Runner

on:
  # triggers the workflow on push for the deployment branch
  push:
    branches: [ deployment ]
    paths-ignore:
      # don't run this workflow when the are pushes, and there are only changes for this directories:
      - 'reporting/**'
      - 'monitoring/**'
      # don't run this workflow when the are pushes and there are only changes for the following files:
      - '**.md'
      - '**.pdf'
      - '**.docx'
      - '**.gitignore'

  # triggers the workflow on pull requests for the deployment branch
  pull_request:
    branches: [ deployment ]
    paths-ignore:
      # don't run this workflow when the are pull requests, and there are only changes for this directories:
      - 'reporting/**'
      - 'monitoring/**'
      # don't run this workflow when the are pull requests, and there are only changes for the following files:
      - '**.md'
      - '**.pdf'
      - '**.docx'
      - '**.gitignore'

jobs:
  deliveries-engine-runner:
    # the type of runner that the job will run on, in this case, it will be on the Github runner that is ruunning on the vm provided for this project
    runs-on:
    - deliveries-engine-runner

    name: Run deliveries-engine docker-compose
    steps:
    - uses: actions/checkout@v2
    - name: Run compose
      run: |
        cd deliveries-engine/
        sudo docker-compose down
        sudo docker-compose up --build -d

  db-migration:
    name: Migrate DB
    # the type of runner that the job will run on, in this case, it will be on the Github runner that is ruunning on the vm provided for this project
    runs-on: deliveries-engine-runner

    needs: [deliveries-engine-runner]

    # run this job only if the previous one succeeds, to prevent trying to migrate non-existent DB
    if: always() && needs.deliveries-engine-runner.result == 'success'

    # steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from Github
        uses: actions/checkout@v2

      - name: Step 2 - Have Flyway migrate the deliveries-engine project's database
        run: |
          cd deliveries-engine/deliveries-engine/
          mvn clean install -Dmaven.test.skip=true
          mvn clean flyway:migrate -Dflyway.configFiles=myFlywayConfig.properties